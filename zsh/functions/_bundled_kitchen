#compdef bundled_kitchen

__kitchen_commands () {
  local -a commands; commands=(
    'console:Kitchen Console!'
    'converge:Change instance state to converge. Use ...'
    'create:Change instance state to create. Start ...'
    'destroy:Change instance state to destroy. Delete...'
    'diagnose:Show computed diagnostic configuration'
    'driver:Driver subcommands'
    'driver create:Create a new Kitchen Driver gem project'
    'driver discover:Discover Test Kitchen drivers published...'
    'driver help:Describe subcommands or one specific su...'
    'exec:Execute command on one or more instance'
    'help:Describe available commands or one spec...'
    'init:Adds some configuration to your cookboo...'
    'list:Lists one or more instances'
    'login:Log in to one instance'
    'setup:Change instance state to setup. Prepare...'
    'test:Test (destroy, create, converge, setup,...'
    'verify:Change instance state to verify. Run au...'
    'version:Print Kitchens version information'
  )
  _describe -t commands 'kitchen command' commands
}

__kitchen_sub_commands () {
  local -a common_args; common_args=(
    '(-h|--help)'{-h,--help}'[Show the command help text]'
  )
  case "$words[1]" in
    (*)
      _arguments -C \
        $common_args
    ;;
  esac
}

__kitchen_general_args () {
  _arguments -C $common_args
}

_kitchen () {
  _arguments -C \
    '(--help)'--help'[Help about the current command]' \
    '(-): :->command' \
    '(-)*:: :->arg'

  case "$state" in
    (command)
      __kitchen_commands
    ;;
    (arg)
      __kitchen_sub_commands
    ;;
  esac
}

_kitchen "$@"
