#compdef nodetool

__nodetool_commands () {
  local -a commands; commands=(
    'cfhistograms:Print statistic histograms for a given column family'
    'cfstats:Print statistics on column families'
    'cleanup:Triggers the immediate cleanup of keys no longer belonging to a node. By default, clean all keyspaces'
    'clearsnapshot:Remove the snapshot with the given name from the given keyspaces. If no snapshotName is specified we will remove all snapshots'
    'compact:Force a (major) compaction on one or more column families'
    'compactionhistory:Print history of compaction'
    'compactionstats:Print statistics on compactions'
    'decommission:Decommission the *node I am connecting to*'
    'describecluster:Print the name, snitch, partitioner and schema version of a cluster'
    'describering:Shows the token ranges info of a given keyspace'
    'disableautocompaction:Disable autocompaction for the given keyspace and column family'
    'disablebackup:Disable incremental backup'
    'disablebinary:Disable native transport (binary protocol)'
    'disablegossip:Disable gossip (effectively marking the node down)'
    'disablehandoff:Disable storing hinted handoffs'
    'disablethrift:Disable thrift server'
    'drain:Drain the node (stop accepting writes and flush all column families)'
    'enableautocompaction:Enable autocompaction for the given keyspace and column family'
    'enablebackup:Enable incremental backup'
    'enablebinary:Reenable native transport (binary protocol)'
    'enablegossip:Reenable gossip'
    'enablehandoff:Reenable the future hints storing on the current node'
    'enablethrift:Reenable thrift server'
    'flush:Flush one or more column families'
    'gcstats:Print GC Statistics'
    'getcompactionthreshold:Print min and max compaction thresholds for a given column family'
    'getcompactionthroughput:Print the MB/s throughput cap for compaction in the system'
    'getendpoints:Print the end points that owns the key'
    'getinterdcstreamthroughput:Print the Mb/s throughput cap for inter-datacenter streaming in the system'
    'getlogginglevels:Get the runtime logging levels'
    'getsstables:Print the sstable filenames that own the key'
    'getstreamthroughput:Print the Mb/s throughput cap for streaming in the system'
    'gossipinfo:Shows the gossip information for the cluster'
    'help:Display help information'
    'info:Print node information (uptime, load, ...)'
    'invalidatecountercache:Invalidate the counter cache'
    'invalidatekeycache:Invalidate the key cache'
    'invalidaterowcache:Invalidate the row cache'
    'join:Join the ring'
    'listsnapshots:Lists all the snapshots along with the size on disk and true size.'
    'move:Move node on the token ring to a new token'
    'netstats:Print network information on provided host (connecting node by default)'
    'pausehandoff:Pause hints delivery process'
    'proxyhistograms:Print statistic histograms for network operations'
    'rangekeysample:Shows the sampled keys held across all keyspaces'
    'rebuild:Rebuild data by streaming from other nodes (similarly to bootstrap)'
    'rebuild_index:A full rebuild of native secondary indexes for a given column family'
    'refresh:Load newly placed SSTables to the system without restart'
    'refreshsizeestimates:Refresh system.size_estimates'
    'reloadtriggers:Reload trigger classes'
    'removenode:Show status of current node removal, force completion of pending removal or remove provided ID'
    'repair:Repair one or more column families'
    'resetlocalschema:Reset nodes local schema and resync'
    'resumehandoff:Resume hints delivery process'
    'ring:Print information about the token ring'
    'scrub:Scrub (rebuild sstables for) one or more column families'
    'setcachecapacity:Set global key, row, and counter cache capacities (in MB units)'
    'setcachekeystosave:Set number of keys saved by each cache for faster post-restart warmup. 0 to disable'
    'setcompactionthreshold:Set min and max compaction thresholds for a given column family'
    'setcompactionthroughput:Set the MB/s throughput cap for compaction in the system, or 0 to disable throttling'
    'sethintedhandoffthrottlekb:Set hinted handoff throttle in kb per second, per delivery thread.'
    'setinterdcstreamthroughput:Set the Mb/s throughput cap for inter-datacenter streaming in the system, or 0 to disable throttling'
    'setlogginglevel:Set the log level threshold for a given class. If both class and level are empty/null, it will reset to the initial configuration'
    'setstreamthroughput:Set the Mb/s throughput cap for streaming in the system, or 0 to disable throttling'
    'settraceprobability:Sets the probability for tracing any given request to value. 0 disables, 1 enables for all requests, 0 is the default'
    'snapshot:Take a snapshot of specified keyspaces or a snapshot of the specified column family'
    'status:Print cluster information (state, load, IDs, ...)'
    'statusbackup:Status of incremental backup'
    'statusbinary:Status of native transport (binary protocol)'
    'statusgossip:Status of gossip'
    'statushandoff:Status of storing future hints on the current node'
    'statusthrift:Status of thrift server'
    'stop:Stop compaction'
    'stopdaemon:Stop cassandra daemon'
    'toppartitions:Sample and print the most active partitions for a given column family'
    'tpstats:Print usage statistics of thread pools'
    'truncatehints:Truncate all hints on the local node, or truncate hints for the endpoint(s) specified.'
    'upgradesstables:Rewrite sstables (for the requested column families) that are not on the current version (thus upgrading them to said current version)'
    'version:Print cassandra version'
  )
  _describe -t commands 'nodetool command' commands
}

__nodetool_sub_commands () {
  local -a common_args; common_args=(
    '(-h|--host)'{-h,--host}'[The host to run the command from]' \
    '(-p|--port)'{-p,--port}'[Port number]' \
    '(-pw|--password)'{-pw,--password}'[password]' \
    '(-u|--username)'{-u,--username}'[username]' \
    '(-pwf|--password-file)'{-pwf,--password-file}'[password filepath]'
  )
  case "$words[1]" in
    (help)
      _arguments -C \
        '(-): :->help-command'
      case "$state" in
        (help-command)
          __nodetool_commands
        ;;
      esac
    ;;
    (*)
      _arguments -C \
        $common_args
    ;;
  esac
}

_nodetool () {
  _arguments -C \
    '(-): :->command' \
    '(-)*:: :->arg'

  case "$state" in
    (command)
      __nodetool_commands
    ;;
    (arg)
      __nodetool_sub_commands
    ;;
  esac
}

_nodetool "$@"
