.base_test:
  stage: test
  tags:
    - docker
  before_script:
    - apk update
    - apk add git
  script:
    - ./install.py -vv
    - git status --short && test "$(git status --short)" = ""

default:
  interruptible: true

lint:
  stage: test
  image: python:latest
  tags:
    - docker
  script:
    - pip install --user --upgrade pip
    - pip install --user --upgrade setuptools wheel
    - pip install --user --upgrade \
        flake8 \
        flake8-docstrings \
        flake8-future-import \
        flake8-import-order \
        mypy \
        pep8-naming \
        pydocstyle
    - pip check
    - ~/.local/bin/flake8 --statistics install.py
    - ~/.local/bin/mypy --strict install.py

py3.6:
  image: python:3.6-alpine
  extends: .base_test

py3.7:
  image: python:3.7-alpine
  extends: .base_test

py3.8:
  image: python:3.8-alpine
  extends: .base_test

py3.9:
  image: python:3.9-alpine
  extends: .base_test

py3.10:
  image: python:3.10-rc-alpine
  extends: .base_test

deploy_github:
  stage: deploy
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "${GITHUB_KEY}" > ~/.ssh/id_rsa
    - echo "${GITHUB_KEY_PUB}" > ~/.ssh/id_rsa.pub
    - chmod 700 ~/.ssh/id_rsa*
    - ssh-keyscan 'github.com' >> ~/.ssh/known_hosts
    - git remote add github -t main git@github.com:perobertson/dotfiles.git
    - git fetch --all --verbose
    - git checkout -B "${CI_COMMIT_REF_NAME}"
    - git push --set-upstream github "${CI_COMMIT_REF_NAME}"
  after_script:
    - rm ~/.ssh/id_rsa
    - rm ~/.ssh/id_rsa.pub
  environment:
    name: github
  resource_group: github
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

trigger_scripts:
  stage: deploy
  trigger:
    project: perobertson/scripts
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
